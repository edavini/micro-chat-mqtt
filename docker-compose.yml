version: '3'

services:
  # database
  mongo:
    image: mongo
    container_name: MongoDB
    volumes: 
      - mongo-volume:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    ports:
      # - '27017-27019:27017-27019'
      - '${MONGO_PORT}:${MONGO_PORT}'
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGO_DATABASE}"
  # db admin panel
  mongo-express:
    image: mongo-express
    container_name: MongoExpressAdmin
    # restart: always
    ports:
      - 8888:8081
    depends_on: 
      - mongo
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
      MONGOEXPRESS_LOGIN: dev
      MONGOEXPRESS_PASSWORD: dev
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}

  # server
  node-app:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: NodeApp
    restart: always
    ports: 
      - 3000:3000
      - 8883:8883
      - 8885:8885
    depends_on: 
      - mongo
    # command: ["../wait-for-it.sh", "{MONGO_HOST}:${MONGO_PORT}", "--", "nodemon", "app.js"]
    # command: ["nodemon", "app.js"]
    environment: 
      PORT: 3000
      WAIT_HOSTS: ${MONGO_HOST}:${MONGO_PORT}
      MONGO_URL: "mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DATABASE}?authSource=admin"

  # TODO: Add Client into the docker-compose file
  # client
  # client:
  #   container_name: ClientApp
  #   image: danjellz/http-server
  #   volumes:
  #     - './client-app:/app'
  #   ports:
  #     - '4201:4200'

volumes:
  mongo-volume: